#!/usr/bin/env python3
"""
ai_task_manager - FastAPI Application
Generated by Autonomous AGI Development Pipeline
"""

from fastapi import FastAPI, HTTPException, Depends
from fastapi.middleware.cors import CORSMiddleware
from fastapi.security import HTTPBearer, HTTPAuthorizationCredentials
from sqlalchemy.orm import Session
import uvicorn
from datetime import datetime

from .models import engine, SessionLocal
from .api.routes import router

app = FastAPI(
    title="ai_task_manager",
    description="An AI-powered task management application with intelligent prioritization",
    version="1.0.0",
    docs_url="/docs",
    redoc_url="/redoc"
)

# CORS middleware
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],  # Configure appropriately for production
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# Security
security = HTTPBearer()

# Database dependency
def get_db():
    db = SessionLocal()
    try:
        yield db
    finally:
        db.close()

# Include API routes
app.include_router(router, prefix="/api/v1")

# Health check endpoint
@app.get("/health")
async def health_check():
    return {
        "status": "healthy",
        "timestamp": datetime.now().isoformat(),
        "service": "ai_task_manager",
        "version": "1.0.0"
    }

# Root endpoint
@app.get("/")
async def root():
    return {
        "message": "Welcome to ai_task_manager",
        "description": "An AI-powered task management application with intelligent prioritization",
        "version": "1.0.0",
        "docs": "/docs",
        "features": ['User authentication and authorization', 'Task creation and management', 'AI-powered task prioritization', 'Real-time notifications', 'Collaborative workspaces', 'Analytics and reporting', 'Mobile responsive design']
    }

if __name__ == "__main__":
    uvicorn.run(
        app, 
        host="0.0.0.0", 
        port=8000, 
        reload=True,
        log_level="info"
    )