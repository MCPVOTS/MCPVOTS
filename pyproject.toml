[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "mcpvots-backend"
version = "2.0.0"
description = "MCPVots backend with advanced MCP integration"
authors = ["MCPVots Team <team@mcpvots.app>"]
license = "MIT"
readme = "README.md"
python = "^3.13"

[tool.poetry.dependencies]
python = "^3.13"
fastapi = "^0.115.0"
uvicorn = {extras = ["standard"], version = "^0.30.1"}
pydantic = "^2.8.2"
pydantic-settings = "^2.3.4"
sqlalchemy = "^2.0.31"
asyncpg = "^0.29.0"
redis = "^5.0.7"
websockets = "^12.0"
msgpack = "^1.0.8"
structlog = "^24.4.0"
httpx = "^0.27.0"
python-multipart = "^0.0.9"
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-jose = {extras = ["cryptography"], version = "^3.3.0"}

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.1"
pytest-asyncio = "^0.23.7"
pytest-cov = "^5.0.0"
ruff = "^0.5.1"
mypy = "^1.11.0"
black = "^24.4.2"
pre-commit = "^3.8.0"

[tool.poetry.group.test.dependencies]
httpx = "^0.27.0"
pytest-mock = "^3.14.0"

[tool.ruff]
line-length = 100
target-version = "py313"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.pyupgrade]
keep-runtime-typing = true

[tool.mypy]
python_version = "3.13"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["backend"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]
